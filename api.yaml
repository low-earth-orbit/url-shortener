openapi: 3.0.0
info:
  title: URL Link Shortener API
  description: API for managing short URLs and user accounts.
  version: "1.0.0"
  contact:
    name: "API Support"
    url: "https://cs3103.cs.unb.ca/hhong"
    email: "leo.hong@unb.ca"
servers:
  - url: "https://cs3103.cs.unb.ca:8042"
paths:
  /login:
    post:
      summary: Authenticates a user via LDAP, checks the local database and initiates a session
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The user's username.
                password:
                  type: string
                  description: The user's password.
              required:
                - username
                - password
      responses:
        "200":
          description: User is already logged in.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: OK
                  username:
                    type: string
                    description: The username of the authenticated user.
                required:
                  - status
        "201":
          description: User authenticated. Session initiated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Created
                  username:
                    type: string
                    description: The username of the authenticated user.
                required:
                  - status
                  - username
        "401":
          description: Authentication failed. Invalid username or password.
        "500":
          description: Internal server error.
  /logout:
    delete:
      summary: Logs out the current user and invalidates the session
      tags:
        - Users
      security:
        - sessionAuth: []
      responses:
        "204":
          description: Logout successful. Session invalidated.
          headers:
            Set-Cookie:
              description: Clears the session cookie.
              schema:
                type: string
                example: "sessionId=; Path=/; Expires=Thu, 01 Jan 1970 00:00:00 GMT; HttpOnly; Secure"
  /users/links:
    get:
      summary: Retrieves all links created by a specific user
      tags:
        - Links
      security:
        - sessionAuth: []
      responses:
        "200":
          description: Successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Link"
        "500":
          description: Database error
        "401":
          description: Authentication required
  user/links:
    post:
      summary: Creates a new short link
      tags:
        - Links
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewLinkRequest"
      responses:
        "201":
          description: Link created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Link"
        "400":
          description: Invalid input
        "401":
          description: Authentication required
        "500":
          description: Database or server error
  user/links/{linkId}:
    delete:
      summary: Deletes a specific link
      tags:
        - Links
      security:
        - sessionAuth: []
      parameters:
        - in: path
          name: linkId
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Link deleted successfully
        "404":
          description: Link not found
        "401":
          description: Authentication required
        "500":
          description: Database error
  /{shortcut}:
    get:
      summary: Retrieves the destination URL
      tags:
        - Links
      parameters:
        - in: path
          name: shortcut
          required: true
          schema:
            type: string
      responses:
        "302":
          description: Redirect to the destination URL
          headers:
            Location:
              schema:
                type: string
                format: uri
                description: URL to redirect to
        "404":
          description: Shortcut not found
        "500":
          description: Database error
components:
  securitySchemes:
    sessionAuth:
      type: apiKey
      in: cookie
      name: sessionId
  schemas:
    NewLinkRequest:
      type: object
      properties:
        destination:
          type: string
          format: uri
      required:
        - destination
    Link:
      type: object
      properties:
        linkId:
          type: integer
        destination:
          type: string
        shortcut:
          type: string
        username:
          type: string
      required:
        - linkId
        - destination
        - shortcut
        - username
